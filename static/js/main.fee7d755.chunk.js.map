{"version":3,"sources":["components/SliderColor/index.js","components/utls.js","components/SMYK/index.js","components/RGB/index.js","components/HLS/index.js","App.js","index.js"],"names":["SliderColor","_ref","value","text","handleChange","_ref$min","min","_ref$max","max","isError","Math","floor","react_default","a","createElement","Grid_default","Typography_default","gutterBottom","variant","component","container","justify","alignItems","wrap","Slider_default","style","padding","round","aria-labelledby","onChange","index_es","margin","marginLeft","type","error","helperText","types","HLS","CMYK","RGB","RGBtoHLS","R","G","B","R_","G_","B_","Cmax","Cmin","delta","H","condition","find","e","L","S","abs","RGBtoCMYK","K","C","M","Y","HLStoRGB","X","m","HLSMatrix","_HLSMatrix$find$value","Object","slicedToArray","CMYKtoRGB","withStyles","card","width","media","height","classes","_handleChange","data","Card_default","className","CardMedia_default","background","concat","title","image","CardContent_default","components_SliderColor","CardActions_default","Button_default","size","color","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeComplete","_color$rgb","rgb","r","g","b","setState","commonReturn","toHLS","_this$state","state","objectSpread","toSMYK","_this$state2","toRGB","sliderType","_R","_G","_B","addNewValue","defineProperty","target","_C","_M","_Y","_K","_CMYKtoRGB","_H","_L","_S","_HLStoRGB","Error","appearPicker","isPick","arguments","length","undefined","_this$state3","item","Grow_default","in","timeout","zIndex","direction","onClick","marginTop","icons_index_es","ClickAwayListener_default","onClickAway","position","lib","onChangeComplete","components_SMYK","components_RGB","components_HLS","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fee7d755.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/lab/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport { TextField } from '@material-ui/core';\n\nconst SliderColor = ({ value, text, handleChange, min = 0, max = 100 }) => {\n  const isError = () => value < min || value > Math.floor(max);\n\n  return (\n    <Grid>\n      <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\n        {text}\n      </Typography>\n      <Grid container justify='center' alignItems='center' wrap='nowrap'>\n        <Slider\n          style={{ padding: '12px 0px' }}\n          value={Math.round(value * 100) / 100}\n          aria-labelledby=\"label\"\n          onChange={handleChange(text)}\n          min={min}\n          max={max}\n        />\n        <TextField\n          value={Math.round(value * 100) / 100}\n          onChange={handleChange(text)}\n          margin=\"none\"\n          style={{ marginLeft: 20 }}\n          type=\"number\"\n          error={isError()}\n          helperText={isError() ? \"Invalid value\" : ' '}\n\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SliderColor;","const types = {\n  HLS: 'HLS',\n  CMYK: 'CMYK',\n  RGB: 'RGB',\n}\n\nconst RGBtoHLS = (R, G, B) => {\n  const R_ = R / 255;\n  const G_ = G / 255;\n  const B_ = B / 255;\n  const Cmax = Math.max(R_, G_, B_);\n  const Cmin = Math.min(R_, G_, B_);\n  const delta = Cmax - Cmin;\n\n  const HMatrix = [\n    {\n      condition: () => delta === 0,\n      value: 0,\n    },\n    {\n      condition: () => Cmax === R_,\n      value: 60 * (((G_ - B_) / delta) % 6),\n    },\n    {\n      condition: () => Cmax === G_,\n      value: 60 * (((B_ - R_) / delta) + 2),\n    },\n    {\n      condition: () => Cmax === B_,\n      value: 60 * (((R_ - G_) / delta) + 4),\n    },\n  ];\n\n  const H = (HMatrix.find(e => e.condition()).value + 360) % 360 || 0;\n\n  const L = (Cmax + Cmin) / 2;\n\n  const SMatrix = [\n    {\n      condition: () => delta === 0,\n      value: 0,\n    },\n    {\n      condition: () => delta !== 0,\n      value: delta / (1 - Math.abs(2 * L - 1)),\n    },\n  ];\n\n  const S = SMatrix.find(e => e.condition()).value;\n\n  return { H, S, L };\n}\n\nconst RGBtoCMYK = (R, G, B) => {\n  const R_ = R / 255;\n  const G_ = G / 255;\n  const B_ = B / 255;\n\n  const K = 1 - Math.max(R_, G_, B_);\n  const C = (1 - R_ - K) / (1 - K) || 0;\n  const M = (1 - G_ - K) / (1 - K) || 0;\n  const Y = (1 - B_ - K) / (1 - K) || 0;\n\n  return { C, M, Y, K };\n}\n\nconst HLStoRGB = (H, L, S) => {\n  const C = (1 - Math.abs(2 * L - 1)) * S;\n  const X = C * (1 - Math.abs((H / 60) % 2 - 1));\n  const m = L - C / 2;\n  \n  const HLSMatrix = [\n    {\n      condition: () => (H >= 0 && H < 60) || !H,\n      value: [C, X, 0],\n    }, {\n      condition: () => H >= 60 && H < 120,\n      value: [X, C, 0],\n    }, {\n      condition: () => H >= 120 && H < 180,\n      value: [0, C, X],\n    }, {\n      condition: () => H >= 180 && H < 240,\n      value: [0, X, C],\n    }, {\n      condition: () => H >= 240 && H < 300,\n      value: [X, 0, C],\n    }, {\n      condition: () => H >= 300 && H <= 360,\n      value: [C, 0, X],\n    },\n  ];\n\n  const [R_, G_, B_] = HLSMatrix.find(e => e.condition()).value;\n\n  const R = (R_ + m) * 255;\n  const G = (G_ + m) * 255;\n  const B = (B_ + m) * 255;\n\n  return { R, G, B };\n}\n\nconst CMYKtoRGB = (C, M, Y, K) => {\n  const R = 255 * (1 - C) * (1 - K);\n  const G = 255 * (1 - M) * (1 - K);\n  const B = 255 * (1 - Y) * (1 - K);\n  return { R, G, B };\n}\n\nexport { types, RGBtoHLS, RGBtoCMYK, HLStoRGB, CMYKtoRGB };","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport SliderColor from '../SliderColor';\nimport { types } from '../utls';\n\nconst styles = {\n  card: {\n    width: 345,\n    margin: 20,\n  },\n  media: {\n    height: 140,\n  }\n};\n\nconst SMYK = ({ classes, C, M, Y, K, handleChange: _handleChange, R, G, B }) => {\n  const handleChange = _handleChange({ type: types.CMYK, data: { C, M, Y, K } });\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        style={{ background: `rgb(${R},${G},${B})` }}\n        title=\"CMYK\"\n        image={'none'}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          CMYK\n      </Typography>\n        <SliderColor handleChange={handleChange} min={0} max={1} value={C} text={'C'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={M} text={'M'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={Y} text={'Y'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={K} text={'K'} />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default withStyles(styles)(SMYK);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport SliderColor from '../SliderColor';\nimport { types } from '../utls';\n\nconst styles = {\n  card: {\n    width: 345,\n    margin: 20,\n  },\n  media: {\n    height: 140,\n  }\n};\n\nconst RGB = ({ classes, R, G, B, handleChange: _handleChange }) => {\n  const handleChange = _handleChange({ type: types.RGB, data: { R, G, B } });\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        style={{ background: `rgb(${R},${G},${B})` }}\n        image={'none'}\n        title=\"RGB\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          RGB\n      </Typography>\n        <SliderColor min={0} max={255} handleChange={handleChange} value={R} text={'R'} />\n        <SliderColor min={0} max={255} handleChange={handleChange} value={G} text={'G'} />\n        <SliderColor min={0} max={255} handleChange={handleChange} value={B} text={'B'} />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default withStyles(styles)(RGB);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SliderColor from '../SliderColor';\nimport { types } from '../utls';\n\nconst styles = {\n  card: {\n    width: 345,\n    margin: 20,\n  },\n  media: {\n    height: 140,\n  }\n};\n\nconst HLS = ({ classes, H, L, S, handleChange: _handleChange, R, G, B }) => {\n  const handleChange = _handleChange({ type: types.HLS, data: { H, S, L } });\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        style={{ background: `rgb(${R},${G},${B})` }}\n        title=\"HLS\"\n        image={'none'}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          HLS\n      </Typography>\n        <SliderColor handleChange={handleChange} min={0} max={360} value={H} text={'H'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={L} text={'L'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={S} text={'S'} />\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Just set max mark ;)\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default withStyles(styles)(HLS);","import React, { Component } from 'react';\nimport SMYK from './components/SMYK';\nimport RGB from './components/RGB';\nimport HLS from './components/HLS';\nimport { Grid, Fab, Paper } from '@material-ui/core';\nimport { types, CMYKtoRGB, RGBtoCMYK, RGBtoHLS, HLStoRGB } from './components/utls';\nimport { BlockPicker } from 'react-color';\nimport { Colorize } from '@material-ui/icons';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      R: 0,\n      G: 150,\n      B: 250,\n      isPick: false,\n    }\n  };\n\n  handleChangeComplete = (color) => {\n    const { r, g, b } = color.rgb;\n    this.setState({ R: r, G: g, B: b });\n  };\n\n  commonReturn = {\n    handleChange: this.handleChange,\n  }\n\n  toHLS = () => {\n    const { R, G, B } = this.state;\n\n    return {\n      handleChange: this.handleChange,\n      ...RGBtoHLS(R, G, B),\n      ...this.state,\n    }\n  }\n\n  toSMYK = () => {\n    const { R, G, B } = this.state;\n\n    return {\n      handleChange: this.handleChange,\n      ...RGBtoCMYK(R, G, B),\n      ...this.state,\n    }\n  }\n\n  toRGB = () => {\n    return {\n      handleChange: this.handleChange,\n      ...this.state,\n    }\n  }\n\n  handleChange = ({ type, data }) => sliderType => (e, value) => {\n    let R;\n    let G;\n    let B;\n    switch (type) {\n      case types.RGB: {\n        const { R: _R, G: _G, B: _B } = data;\n        const addNewValue = { R: _R, G: _G, B: _B, [sliderType]: value || e.target.value };\n\n        R = addNewValue.R || 0;\n        G = addNewValue.G || 0;\n        B = addNewValue.B || 0;\n\n        break;\n      }\n      case types.CMYK: {\n        const { C: _C, M: _M, Y: _Y, K: _K } = data;\n        const addNewValue = { C: _C, M: _M, Y: _Y, K: _K, [sliderType]: value || e.target.value };\n        const { R: _R, G: _G, B: _B } = CMYKtoRGB(addNewValue.C, addNewValue.M, addNewValue.Y, addNewValue.K);\n\n        R = _R || 0;\n        G = _G || 0;\n        B = _B || 0;\n\n        break;\n      }\n      case types.HLS: {\n        const { H: _H, L: _L, S: _S } = data;\n        const addNewValue = { H: _H, L: _L, S: _S, [sliderType]: value || e.target.value };\n        const { R: _R, G: _G, B: _B } = HLStoRGB(addNewValue.H, addNewValue.L, addNewValue.S);\n\n        R = _R || 0;\n        G = _G || 0;\n        B = _B || 0;\n\n        break;\n      }\n      default:\n        throw new Error('No such type');\n    }\n\n    this.setState({ R, G, B });\n  }\n\n  appearPicker = (isPick = !this.state.isPick) => () => {\n    this.setState({ isPick });\n  }\n\n  render() {\n    const { R, G, B, isPick } = this.state;\n\n    return (\n      <Grid container style={{ height: '100vh' }} justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Grid container justify=\"center\">\n            <Grow in={true} timeout={400}>\n              <div style={{ zIndex: 2000 }}>\n                <Grid item>\n                  <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"center\">\n                    <Fab onClick={this.appearPicker()} style={{ marginTop: 20, background: `rgb(${R},${G},${B})` }}>\n                      <Colorize />\n                    </Fab>\n                    {isPick &&\n                      <ClickAwayListener onClickAway={this.appearPicker(false)}>\n\n                        <div style={{ position: 'absolute', marginTop: 100 }}>\n                          <BlockPicker\n                            color={{ r: R, g: G, b: B }}\n                            onChangeComplete={this.handleChangeComplete}\n                          /> </div>\n                      </ClickAwayListener>}\n                  </Grid>\n                </Grid>\n              </div>\n            </Grow>\n            <Grow in={true} timeout={1000}>\n              <div>\n                <SMYK {...this.toSMYK()} />\n              </div>\n            </Grow>\n            <Grow in={true} timeout={2000}>\n              <div>\n                <RGB {...this.toRGB()} />\n              </div>\n            </Grow>\n            <Grow in={true} timeout={3000}>\n              <div>\n                <HLS {...this.toHLS()} />\n              </div>\n            </Grow>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}