{"version":3,"sources":["components/SliderColor/index.js","components/utls.js","components/SMYK/index.js","components/RGB/index.js","components/HLS/index.js","App.js","index.js"],"names":["SliderColor","_ref","value","text","handleChange","_ref$min","min","_ref$max","max","react_default","a","createElement","Grid_default","Typography_default","gutterBottom","variant","component","Slider_default","style","padding","aria-labelledby","onChange","types","HLS","CMYK","RGB","RGBtoHLS","R","G","B","R_","G_","B_","Cmax","Math","Cmin","delta","H","condition","find","e","L","S","abs","RGBtoCMYK","K","C","M","Y","HLStoRGB","X","m","HLSMatrix","_HLSMatrix$find$value","Object","slicedToArray","CMYKtoRGB","withStyles","card","width","margin","media","height","classes","_handleChange","type","data","Card_default","className","CardMedia_default","background","concat","title","image","CardContent_default","components_SliderColor","CardActions_default","Button_default","size","color","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","commonReturn","toHLS","_this$state","state","objectSpread","toSMYK","_this$state2","toRGB","sliderType","_R","_G","_B","addNewValue","defineProperty","_C","_M","_Y","_K","_CMYKtoRGB","_H","_L","_S","_HLStoRGB","Error","setState","index_es","container","justify","alignItems","item","components_SMYK","components_RGB","components_HLS","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.53da340e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/lab/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst SliderColor = ({ value, text, handleChange, min = 0, max = 100 }) => (\r\n  <Grid>\r\n    <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n      {text}\r\n    </Typography>\r\n    <Slider\r\n      style={{ padding: '12px 0px' }}\r\n      value={value}\r\n      aria-labelledby=\"label\"\r\n      onChange={handleChange(text)}\r\n      min={min}\r\n      max={max}\r\n    />\r\n  </Grid>\r\n);\r\n\r\nexport default SliderColor;","const types = {\r\n  HLS: 'HLS',\r\n  CMYK: 'CMYK',\r\n  RGB: 'RGB',\r\n}\r\n\r\nconst RGBtoHLS = (R, G, B) => {\r\n  const R_ = R / 255;\r\n  const G_ = G / 255;\r\n  const B_ = B / 255;\r\n  const Cmax = Math.max(R_, G_, B_);\r\n  const Cmin = Math.min(R_, G_, B_);\r\n  const delta = Cmax - Cmin;\r\n\r\n  const HMatrix = [\r\n    {\r\n      condition: () => delta === 0,\r\n      value: 0,\r\n    },\r\n    {\r\n      condition: () => Cmax === R_,\r\n      value: 60 * (((G_ - B_) / delta) % 6),\r\n    },\r\n    {\r\n      condition: () => Cmax === G_,\r\n      value: 60 * (((B_ - R_) / delta) + 2),\r\n    },\r\n    {\r\n      condition: () => Cmax === B_,\r\n      value: 60 * (((R_ - G_) / delta) + 4),\r\n    },\r\n  ];\r\n\r\n  const H = HMatrix.find(e => e.condition()).value;\r\n\r\n  const L = (Cmax + Cmin) / 2;\r\n\r\n  const SMatrix = [\r\n    {\r\n      condition: () => delta === 0,\r\n      value: 0,\r\n    },\r\n    {\r\n      condition: () => delta !== 0,\r\n      value: delta / (1 - Math.abs(2 * L - 1)),\r\n    },\r\n  ];\r\n\r\n  const S = SMatrix.find(e => e.condition()).value;\r\n\r\n  return { H, S, L };\r\n}\r\n\r\nconst RGBtoCMYK = (R, G, B) => {\r\n  const R_ = R / 255;\r\n  const G_ = G / 255;\r\n  const B_ = B / 255;\r\n\r\n  const K = 1 - Math.max(R_, G_, B_);\r\n  const C = (1 - R_ - K) / (1 - K) || 0;\r\n  const M = (1 - G_ - K) / (1 - K) || 0;\r\n  const Y = (1 - B_ - K) / (1 - K) || 0;\r\n\r\n  return { C, M, Y, K };\r\n}\r\n\r\nconst HLStoRGB = (H, L, S) => {\r\n  const C = (1 - Math.abs(2 * L - 1)) * S;\r\n  const X = C * (1 - Math.abs((H / 60) % 2 - 1));\r\n  const m = L - C / 2;\r\n\r\n  const HLSMatrix = [\r\n    {\r\n      condition: () => H >= 0 && H < 60,\r\n      value: [C, X, 0],\r\n    }, {\r\n      condition: () => H >= 60 && H < 120,\r\n      value: [X, C, 0],\r\n    }, {\r\n      condition: () => H >= 120 && H < 180,\r\n      value: [0, C, X],\r\n    }, {\r\n      condition: () => H >= 180 && H < 240,\r\n      value: [0, X, C],\r\n    }, {\r\n      condition: () => H >= 240 && H < 300,\r\n      value: [X, 0, C],\r\n    }, {\r\n      condition: () => H >= 300 && H <= 360,\r\n      value: [C, 0, X],\r\n    },\r\n  ];\r\n\r\n  const [R_, G_, B_] = HLSMatrix.find(e => e.condition()).value;\r\n\r\n  const R = (R_ + m) * 255;\r\n  const G = (G_ + m) * 255;\r\n  const B = (B_ + m) * 255;\r\n\r\n  return { R, G, B };\r\n}\r\n\r\nconst CMYKtoRGB = (C, M, Y, K) => {\r\n  const R = 255 * (1 - C) * (1 - K);\r\n  const G = 255 * (1 - M) * (1 - K);\r\n  const B = 255 * (1 - Y) * (1 - K);\r\n  return { R, G, B };\r\n}\r\n\r\nexport { types, RGBtoHLS, RGBtoCMYK, HLStoRGB, CMYKtoRGB };","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SliderColor from '../SliderColor';\r\nimport { types } from '../utls';\r\n\r\nconst styles = {\r\n  card: {\r\n    width: 345,\r\n    margin: 20,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  }\r\n};\r\n\r\nconst SMYK = ({ classes, C, M, Y, K, handleChange: _handleChange, R, G, B }) => {\r\n  const handleChange = _handleChange({ type: types.CMYK, data: { C, M, Y, K } });\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        style={{ background: `rgb(${R},${G},${B})` }}\r\n        title=\"CMYK\"\r\n        image={'none'}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          CMYK\r\n      </Typography>\r\n        <SliderColor handleChange={handleChange} min={0} max={1} value={C} text={'C'} />\r\n        <SliderColor handleChange={handleChange} min={0} max={1} value={M} text={'M'} />\r\n        <SliderColor handleChange={handleChange} min={0} max={1} value={Y} text={'Y'} />\r\n        <SliderColor handleChange={handleChange} min={0} max={1} value={K} text={'K'} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SMYK);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SliderColor from '../SliderColor';\r\nimport { types } from '../utls';\r\n\r\nconst styles = {\r\n  card: {\r\n    width: 345,\r\n    margin: 20,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  }\r\n};\r\n\r\nconst RGB = ({ classes, R, G, B, handleChange: _handleChange }) => {\r\n  const handleChange = _handleChange({ type: types.RGB, data: { R, G, B } });\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        style={{ background: `rgb(${R},${G},${B})` }}\r\n        image={'none'}\r\n        title=\"RGB\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          RGB\r\n      </Typography>\r\n        <SliderColor min={0} max={255} handleChange={handleChange} value={R} text={'R'} />\r\n        <SliderColor min={0} max={255} handleChange={handleChange} value={G} text={'G'} />\r\n        <SliderColor min={0} max={255} handleChange={handleChange} value={B} text={'B'} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(RGB);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SliderColor from '../SliderColor';\r\nimport { types } from '../utls';\r\n\r\nconst styles = {\r\n  card: {\r\n    width: 345,\r\n    margin: 20,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  }\r\n};\r\n\r\nconst HLS = ({ classes, H, L, S, handleChange: _handleChange, R, G, B }) => {\r\n  const handleChange = _handleChange({ type: types.HLS, data: { H, S, L } });\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        style={{ background: `rgb(${R},${G},${B})` }}\r\n        title=\"HLS\"\r\n        image={'none'}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          HLS\r\n      </Typography>\r\n        <SliderColor handleChange={handleChange} min={0} max={360} value={H} text={'H'} />\r\n        <SliderColor handleChange={handleChange} min={0} max={1} value={L} text={'L'} />\r\n        <SliderColor handleChange={handleChange} min={0} max={1} value={S} text={'S'} />\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Just set max mark ;)\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(HLS);","import React, { Component } from 'react';\nimport SMYK from './components/SMYK';\nimport RGB from './components/RGB';\nimport HLS from './components/HLS';\nimport { Grid } from '@material-ui/core';\nimport { types, CMYKtoRGB, RGBtoCMYK, RGBtoHLS, HLStoRGB } from './components/utls';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      R: 0,\n      G: 150,\n      B: 250,\n    }\n  };\n\n  commonReturn = {\n    handleChange: this.handleChange,\n  }\n\n  toHLS = () => {\n    const { R, G, B } = this.state;\n\n    return {\n      handleChange: this.handleChange,\n      ...RGBtoHLS(R, G, B),\n      ...this.state,\n    }\n  }\n\n  toSMYK = () => {\n    const { R, G, B } = this.state;\n\n    return {\n      handleChange: this.handleChange,\n      ...RGBtoCMYK(R, G, B),\n      ...this.state,\n    }\n  }\n\n  toRGB = () => {\n    return {\n      handleChange: this.handleChange,\n      ...this.state,\n    }\n  }\n\n  handleChange = ({ type, data }) => sliderType => (e, value) => {\n    let R;\n    let G;\n    let B;\n    switch (type) {\n      case types.RGB: {\n        const { R: _R, G: _G, B: _B } = data;\n        const addNewValue = { R: _R, G: _G, B: _B, [sliderType]: value };\n\n        R = addNewValue.R;\n        G = addNewValue.G;\n        B = addNewValue.B;\n\n        break;\n      }\n      case types.CMYK: {\n        const { C: _C, M: _M, Y: _Y, K: _K } = data;\n        const addNewValue = { C: _C, M: _M, Y: _Y, K: _K, [sliderType]: value };\n        const { R: _R, G: _G, B: _B } = CMYKtoRGB(addNewValue.C, addNewValue.M, addNewValue.Y, addNewValue.K);\n\n        R = _R;\n        G = _G;\n        B = _B;\n\n        break;\n      }\n      case types.HLS: {\n        const { H: _H, L: _L, S: _S } = data;\n        const addNewValue = { H: _H, L: _L, S: _S, [sliderType]: value };\n        const { R: _R, G: _G, B: _B } = HLStoRGB(addNewValue.H, addNewValue.L, addNewValue.S);\n\n        R = _R;\n        G = _G;\n        B = _B;\n\n        break;\n      }\n      default:\n        throw new Error('No such type');\n    }\n\n    this.setState({ R, G, B });\n  }\n\n  render() {\n    return (\n      <Grid container style={{ height: '100vh' }} justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Grid container justify=\"center\">\n            <SMYK {...this.toSMYK()} />\n            <RGB {...this.toRGB()} />\n            <HLS {...this.toHLS()} />\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}