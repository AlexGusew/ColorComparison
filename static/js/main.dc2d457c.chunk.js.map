{"version":3,"sources":["components/SliderColor/index.js","components/utls.js","components/SMYK/index.js","components/RGB/index.js","components/HLS/index.js","App.js","index.js"],"names":["SliderColor","_ref","value","text","handleChange","_ref$min","min","_ref$max","max","isError","react_default","a","createElement","Grid_default","Typography_default","gutterBottom","variant","component","container","justify","alignItems","wrap","Slider_default","style","padding","Math","round","aria-labelledby","onChange","index_es","margin","marginLeft","type","error","helperText","types","HLS","CMYK","RGB","RGBtoHLS","R","G","B","R_","G_","B_","Cmax","Cmin","delta","H","condition","find","e","L","S","abs","RGBtoCMYK","K","C","M","Y","HLStoRGB","X","m","HLSMatrix","_HLSMatrix$find$value","Object","slicedToArray","CMYKtoRGB","withStyles","card","width","media","height","classes","_handleChange","data","Card_default","className","CardMedia_default","background","concat","title","image","CardContent_default","components_SliderColor","CardActions_default","Button_default","size","color","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeComplete","_color$rgb","rgb","r","g","b","setState","commonReturn","toHLS","_this$state","state","objectSpread","toSMYK","_this$state2","toRGB","sliderType","_R","_G","_B","addNewValue","defineProperty","target","_C","_M","_Y","_K","_CMYKtoRGB","_H","_L","_S","_HLStoRGB","Error","appearPicker","isPick","arguments","length","undefined","_this$state3","console","log","item","direction","onClick","marginTop","icons_index_es","ClickAwayListener_default","onClickAway","position","lib","onChangeComplete","components_SMYK","components_RGB","components_HLS","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"mWAsCeA,EAhCK,SAAAC,GAAuD,IAApDC,EAAoDD,EAApDC,MAAOC,EAA6CF,EAA7CE,KAAMC,EAAuCH,EAAvCG,aAAuCC,EAAAJ,EAAzBK,WAAyB,IAAAD,EAAnB,EAAmBA,EAAAE,EAAAN,EAAhBO,WAAgB,IAAAD,EAAV,IAAUA,EACnEE,EAAU,kBAAMP,EAAQI,GAAOJ,EAAQM,GAE7C,OACEE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,cAAY,EAACC,QAAQ,YAAYC,UAAU,MACpDd,GAEHO,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMO,WAAS,EAACC,QAAQ,SAASC,WAAW,SAASC,KAAK,UACxDX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,MAAO,CAAEC,QAAS,YAClBtB,MAAOuB,KAAKC,MAAc,IAARxB,GAAe,IACjCyB,kBAAgB,QAChBC,SAAUxB,EAAaD,GACvBG,IAAKA,EACLE,IAAKA,IAEPE,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACE3B,MAAOuB,KAAKC,MAAc,IAARxB,GAAe,IACjC0B,SAAUxB,EAAaD,GACvB2B,OAAO,OACPP,MAAO,CAAEQ,WAAY,IACrBC,KAAK,SACLC,MAAOxB,IACPyB,WAAYzB,IAAY,gBAAkB,kBC9B9C0B,EAAQ,CACZC,IAAK,MACLC,KAAM,OACNC,IAAK,OAGDC,EAAW,SAACC,EAAGC,EAAGC,GACtB,IAAMC,EAAKH,EAAI,IACTI,EAAKH,EAAI,IACTI,EAAKH,EAAI,IACTI,EAAOrB,KAAKjB,IAAImC,EAAIC,EAAIC,GACxBE,EAAOtB,KAAKnB,IAAIqC,EAAIC,EAAIC,GACxBG,EAAQF,EAAOC,EAqBfE,GAnBU,CACd,CACEC,UAAW,kBAAgB,IAAVF,GACjB9C,MAAO,GAET,CACEgD,UAAW,kBAAMJ,IAASH,GAC1BzC,OAAe0C,EAAKC,GAAMG,EAAS,EAA5B,IAET,CACEE,UAAW,kBAAMJ,IAASF,GAC1B1C,MAAO,KAAQ2C,EAAKF,GAAMK,EAAS,IAErC,CACEE,UAAW,kBAAMJ,IAASD,GAC1B3C,MAAO,KAAQyC,EAAKC,GAAMI,EAAS,KAIpBG,KAAK,SAAAC,GAAC,OAAIA,EAAEF,cAAahD,MAAQ,KAAO,KAAO,EAE5DmD,GAAKP,EAAOC,GAAQ,EAe1B,MAAO,CAAEE,IAAGK,EAbI,CACd,CACEJ,UAAW,kBAAgB,IAAVF,GACjB9C,MAAO,GAET,CACEgD,UAAW,kBAAgB,IAAVF,GACjB9C,MAAO8C,GAAS,EAAIvB,KAAK8B,IAAI,EAAIF,EAAI,MAIvBF,KAAK,SAAAC,GAAC,OAAIA,EAAEF,cAAahD,MAE5BmD,MAGXG,EAAY,SAAChB,EAAGC,EAAGC,GACvB,IAAMC,EAAKH,EAAI,IACTI,EAAKH,EAAI,IACTI,EAAKH,EAAI,IAETe,EAAI,EAAIhC,KAAKjB,IAAImC,EAAIC,EAAIC,GAK/B,MAAO,CAAEa,GAJE,EAAIf,EAAKc,IAAM,EAAIA,IAAM,EAIxBE,GAHD,EAAIf,EAAKa,IAAM,EAAIA,IAAM,EAGrBG,GAFJ,EAAIf,EAAKY,IAAM,EAAIA,IAAM,EAElBA,MAGdI,EAAW,SAACZ,EAAGI,EAAGC,GACtB,IAAMI,GAAK,EAAIjC,KAAK8B,IAAI,EAAIF,EAAI,IAAMC,EAChCQ,EAAIJ,GAAK,EAAIjC,KAAK8B,IAAKN,EAAI,GAAM,EAAI,IACrCc,EAAIV,EAAIK,EAAI,EAEZM,EAAY,CAChB,CACEd,UAAW,kBAAOD,GAAK,GAAKA,EAAI,KAAQA,GACxC/C,MAAO,CAACwD,EAAGI,EAAG,IACb,CACDZ,UAAW,kBAAMD,GAAK,IAAMA,EAAI,KAChC/C,MAAO,CAAC4D,EAAGJ,EAAG,IACb,CACDR,UAAW,kBAAMD,GAAK,KAAOA,EAAI,KACjC/C,MAAO,CAAC,EAAGwD,EAAGI,IACb,CACDZ,UAAW,kBAAMD,GAAK,KAAOA,EAAI,KACjC/C,MAAO,CAAC,EAAG4D,EAAGJ,IACb,CACDR,UAAW,kBAAMD,GAAK,KAAOA,EAAI,KACjC/C,MAAO,CAAC4D,EAAG,EAAGJ,IACb,CACDR,UAAW,kBAAMD,GAAK,KAAOA,GAAK,KAClC/C,MAAO,CAACwD,EAAG,EAAGI,KAvBUG,EAAAC,OAAAC,EAAA,EAAAD,CA2BPF,EAAUb,KAAK,SAAAC,GAAC,OAAIA,EAAEF,cAAahD,MA3B5B,GAiC5B,MAAO,CAAEsC,EAJY,KA7BOyB,EAAA,GA6BZF,GAIJtB,EAHS,KA9BOwB,EAAA,GA8BZF,GAGDrB,EAFM,KA/BOuB,EAAA,GA+BZF,KAKZK,EAAY,SAACV,EAAGC,EAAGC,EAAGH,GAI1B,MAAO,CAAEjB,EAHC,KAAO,EAAIkB,IAAM,EAAID,GAGnBhB,EAFF,KAAO,EAAIkB,IAAM,EAAIF,GAEhBf,EADL,KAAO,EAAIkB,IAAM,EAAIH,KC9DlBY,uBAlCA,CACbC,KAAM,CACJC,MAAO,IACPzC,OAAQ,IAEV0C,MAAO,CACLC,OAAQ,MA4BGJ,CAxBF,SAAApE,GAAmE,IAAhEyE,EAAgEzE,EAAhEyE,QAAShB,EAAuDzD,EAAvDyD,EAAGC,EAAoD1D,EAApD0D,EAAGC,EAAiD3D,EAAjD2D,EAAGH,EAA8CxD,EAA9CwD,EAAiBkB,EAA6B1E,EAA3CG,aAA6BoC,EAAcvC,EAAduC,EAAGC,EAAWxC,EAAXwC,EAAGC,EAAQzC,EAARyC,EAChEtC,EAAeuE,EAAc,CAAE3C,KAAMG,EAAME,KAAMuC,KAAM,CAAElB,IAAGC,IAAGC,IAAGH,OAExE,OACE/C,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CAAMmE,UAAWJ,EAAQJ,MACvB5D,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CACEmE,UAAWJ,EAAQF,MACnBjD,MAAO,CAAEyD,WAAU,OAAAC,OAASzC,EAAT,KAAAyC,OAAcxC,EAAd,KAAAwC,OAAmBvC,EAAnB,MACnBwC,MAAM,OACNC,MAAO,SAETzE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,KACED,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,QAGAP,EAAAC,EAAAC,cAACyE,EAAD,CAAajF,aAAcA,EAAcE,IAAK,EAAGE,IAAK,EAAGN,MAAOwD,EAAGvD,KAAM,MACzEO,EAAAC,EAAAC,cAACyE,EAAD,CAAajF,aAAcA,EAAcE,IAAK,EAAGE,IAAK,EAAGN,MAAOyD,EAAGxD,KAAM,MACzEO,EAAAC,EAAAC,cAACyE,EAAD,CAAajF,aAAcA,EAAcE,IAAK,EAAGE,IAAK,EAAGN,MAAO0D,EAAGzD,KAAM,MACzEO,EAAAC,EAAAC,cAACyE,EAAD,CAAajF,aAAcA,EAAcE,IAAK,EAAGE,IAAK,EAAGN,MAAOuD,EAAGtD,KAAM,UCKlEkE,uBAjCA,CACbC,KAAM,CACJC,MAAO,IACPzC,OAAQ,IAEV0C,MAAO,CACLC,OAAQ,MA2BGJ,CAvBH,SAAApE,GAAuD,IAApDyE,EAAoDzE,EAApDyE,QAASlC,EAA2CvC,EAA3CuC,EAAGC,EAAwCxC,EAAxCwC,EAAGC,EAAqCzC,EAArCyC,EACtBtC,GAAeuE,EAD4C1E,EAAlCG,cACI,CAAE4B,KAAMG,EAAMG,IAAKsC,KAAM,CAAEpC,IAAGC,IAAGC,OAEpE,OACEhC,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CAAMmE,UAAWJ,EAAQJ,MACvB5D,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CACEmE,UAAWJ,EAAQF,MACnBjD,MAAO,CAAEyD,WAAU,OAAAC,OAASzC,EAAT,KAAAyC,OAAcxC,EAAd,KAAAwC,OAAmBvC,EAAnB,MACnByC,MAAO,OACPD,MAAM,QAERxE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,KACED,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,OAGAP,EAAAC,EAAAC,cAACyE,EAAD,CAAa/E,IAAK,EAAGE,IAAK,IAAKJ,aAAcA,EAAcF,MAAOsC,EAAGrC,KAAM,MAC3EO,EAAAC,EAAAC,cAACyE,EAAD,CAAa/E,IAAK,EAAGE,IAAK,IAAKJ,aAAcA,EAAcF,MAAOuC,EAAGtC,KAAM,MAC3EO,EAAAC,EAAAC,cAACyE,EAAD,CAAa/E,IAAK,EAAGE,IAAK,IAAKJ,aAAcA,EAAcF,MAAOwC,EAAGvC,KAAM,4CCapEkE,uBAtCA,CACbC,KAAM,CACJC,MAAO,IACPzC,OAAQ,IAEV0C,MAAO,CACLC,OAAQ,MAgCGJ,CA5BH,SAAApE,GAAgE,IAA7DyE,EAA6DzE,EAA7DyE,QAASzB,EAAoDhD,EAApDgD,EAAGI,EAAiDpD,EAAjDoD,EAAGC,EAA8CrD,EAA9CqD,EAAiBqB,EAA6B1E,EAA3CG,aAA6BoC,EAAcvC,EAAduC,EAAGC,EAAWxC,EAAXwC,EAAGC,EAAQzC,EAARyC,EAC5DtC,EAAeuE,EAAc,CAAE3C,KAAMG,EAAMC,IAAKwC,KAAM,CAAE3B,IAAGK,IAAGD,OAEpE,OACE3C,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CAAMmE,UAAWJ,EAAQJ,MACvB5D,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CACEmE,UAAWJ,EAAQF,MACnBjD,MAAO,CAAEyD,WAAU,OAAAC,OAASzC,EAAT,KAAAyC,OAAcxC,EAAd,KAAAwC,OAAmBvC,EAAnB,MACnBwC,MAAM,MACNC,MAAO,SAETzE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,KACED,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYI,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAhD,OAGAP,EAAAC,EAAAC,cAACyE,EAAD,CAAajF,aAAcA,EAAcE,IAAK,EAAGE,IAAK,IAAKN,MAAO+C,EAAG9C,KAAM,MAC3EO,EAAAC,EAAAC,cAACyE,EAAD,CAAajF,aAAcA,EAAcE,IAAK,EAAGE,IAAK,EAAGN,MAAOmD,EAAGlD,KAAM,MACzEO,EAAAC,EAAAC,cAACyE,EAAD,CAAajF,aAAcA,EAAcE,IAAK,EAAGE,IAAK,EAAGN,MAAOoD,EAAGnD,KAAM,OAE3EO,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,KACED,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAQ6E,KAAK,QAAQC,MAAM,WAA3B,+DCmGOC,cAjIb,SAAAA,IAAc,IAAAC,EAAA,OAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,KAAAH,IACZC,EAAAzB,OAAA4B,EAAA,EAAA5B,CAAA2B,KAAA3B,OAAA6B,EAAA,EAAA7B,CAAAwB,GAAAM,KAAAH,QASFI,qBAAuB,SAACR,GAAU,IAAAS,EACZT,EAAMU,IAAlBC,EADwBF,EACxBE,EAAGC,EADqBH,EACrBG,EAAGC,EADkBJ,EAClBI,EACdX,EAAKY,SAAS,CAAE/D,EAAG4D,EAAG3D,EAAG4D,EAAG3D,EAAG4D,KAZnBX,EAeda,aAAe,CACbpG,aAAcuF,EAAKvF,cAhBPuF,EAmBdc,MAAQ,WAAM,IAAAC,EACQf,EAAKgB,MAAjBnE,EADIkE,EACJlE,EAAGC,EADCiE,EACDjE,EAAGC,EADFgE,EACEhE,EAEd,OAAOwB,OAAA0C,EAAA,EAAA1C,CAAA,CACL9D,aAAcuF,EAAKvF,cAChBmC,EAASC,EAAGC,EAAGC,GACfiD,EAAKgB,QAzBEhB,EA6BdkB,OAAS,WAAM,IAAAC,EACOnB,EAAKgB,MAAjBnE,EADKsE,EACLtE,EAAGC,EADEqE,EACFrE,EAAGC,EADDoE,EACCpE,EAEd,OAAOwB,OAAA0C,EAAA,EAAA1C,CAAA,CACL9D,aAAcuF,EAAKvF,cAChBoD,EAAUhB,EAAGC,EAAGC,GAChBiD,EAAKgB,QAnCEhB,EAuCdoB,MAAQ,WACN,OAAO7C,OAAA0C,EAAA,EAAA1C,CAAA,CACL9D,aAAcuF,EAAKvF,cAChBuF,EAAKgB,QA1CEhB,EA8CdvF,aAAe,SAAAH,GAAA,IAAG+B,EAAH/B,EAAG+B,KAAM4C,EAAT3E,EAAS2E,KAAT,OAAoB,SAAAoC,GAAU,OAAI,SAAC5D,EAAGlD,GACnD,IAAIsC,EACAC,EACAC,EACJ,OAAQV,GACN,KAAKG,EAAMG,IAAK,IACH2E,EAAqBrC,EAAxBpC,EAAU0E,EAActC,EAAjBnC,EAAU0E,EAAOvC,EAAVlC,EAChB0E,EAAWlD,OAAAmD,EAAA,EAAAnD,CAAA,CAAK1B,EAAGyE,EAAIxE,EAAGyE,EAAIxE,EAAGyE,GAAKH,EAAa9G,GAASkD,EAAEkE,OAAOpH,OAE3EsC,EAAI4E,EAAY5E,GAAK,EACrBC,EAAI2E,EAAY3E,GAAK,EACrBC,EAAI0E,EAAY1E,GAAK,EAErB,MAEF,KAAKP,EAAME,KAAM,IACJkF,EAA4B3C,EAA/BlB,EAAU8D,EAAqB5C,EAAxBjB,EAAU8D,EAAc7C,EAAjBhB,EAAU8D,EAAO9C,EAAVnB,EACvB2D,EAAWlD,OAAAmD,EAAA,EAAAnD,CAAA,CAAKR,EAAG6D,EAAI5D,EAAG6D,EAAI5D,EAAG6D,EAAIhE,EAAGiE,GAAKV,EAAa9G,GAASkD,EAAEkE,OAAOpH,OAFnEyH,EAGiBvD,EAAUgD,EAAY1D,EAAG0D,EAAYzD,EAAGyD,EAAYxD,EAAGwD,EAAY3D,GAEnGjB,EALemF,EAGPnF,GAEE,EACVC,EANekF,EAGAlF,GAGL,EACVC,EAPeiF,EAGOjF,GAIZ,EAEV,MAEF,KAAKP,EAAMC,IAAK,IACHwF,EAAqBhD,EAAxB3B,EAAU4E,EAAcjD,EAAjBvB,EAAUyE,EAAOlD,EAAVtB,EAChB8D,EAAWlD,OAAAmD,EAAA,EAAAnD,CAAA,CAAKjB,EAAG2E,EAAIvE,EAAGwE,EAAIvE,EAAGwE,GAAKd,EAAa9G,GAASkD,EAAEkE,OAAOpH,OAF7D6H,EAGkBlE,EAASuD,EAAYnE,EAAGmE,EAAY/D,EAAG+D,EAAY9D,GAEnFd,EALcuF,EAGNvF,GAEE,EACVC,EANcsF,EAGCtF,GAGL,EACVC,EAPcqF,EAGQrF,GAIZ,EAEV,MAEF,QACE,MAAM,IAAIsF,MAAM,gBAGpBrC,EAAKY,SAAS,CAAE/D,IAAGC,IAAGC,SAvFViD,EA0FdsC,aAAe,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,IAAWxC,EAAKgB,MAAMuB,OAAtB,OAAiC,WAC9CvC,EAAKY,SAAS,CAAE2B,aAzFhBvC,EAAKgB,MAAQ,CACXnE,EAAG,EACHC,EAAG,IACHC,EAAG,IACHwF,QAAQ,GANEvC,wEA8FL,IAAA2C,EACqBzC,KAAKc,MAAzBnE,EADD8F,EACC9F,EAAGC,EADJ6F,EACI7F,EAAGC,EADP4F,EACO5F,EAAGwF,EADVI,EACUJ,OAIjB,QAFE1F,IAAMC,IAAMC,IAAM6F,QAAQC,IAAI3C,KAAKc,OAGnCjG,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMX,WAAS,EAACK,MAAO,CAAEkD,OAAQ,SAAWtD,QAAQ,SAASC,WAAW,UACtEV,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAM4G,MAAI,GACR/H,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMX,WAAS,EAACC,QAAQ,UACtBT,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAM4G,MAAI,GACR/H,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMX,WAAS,EAACwH,UAAU,SAASvH,QAAQ,aAAaC,WAAW,UACjEV,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAK8G,QAAS9C,KAAKoC,eAAgB1G,MAAO,CAAEqH,UAAW,GAAI5D,WAAU,OAAAC,OAASzC,EAAT,KAAAyC,OAAcxC,EAAd,KAAAwC,OAAmBvC,EAAnB,OACnEhC,EAAAC,EAAAC,cAACiI,EAAA,EAAD,OAEDX,GACCxH,EAAAC,EAAAC,cAACkI,EAAAnI,EAAD,CAAmBoI,YAAalD,KAAKoC,cAAa,IAEhDvH,EAAAC,EAAAC,cAAA,OAAKW,MAAO,CAAEyH,SAAU,WAAYJ,UAAW,MAC7ClI,EAAAC,EAAAC,cAACqI,EAAA,YAAD,CACExD,MAAO,CAAEW,EAAG5D,EAAG6D,EAAG5D,EAAG6D,EAAG5D,GACxBwG,iBAAkBrD,KAAKI,uBAH3B,QAQRvF,EAAAC,EAAAC,cAACuI,EAAStD,KAAKgB,UACfnG,EAAAC,EAAAC,cAACwI,EAAQvD,KAAKkB,SACdrG,EAAAC,EAAAC,cAACyI,EAAQxD,KAAKY,mBA1HR6C,aCNlBC,IAASC,OAAO9I,EAAAC,EAAAC,cAAC6I,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.dc2d457c.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/lab/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport { TextField } from '@material-ui/core';\n\nconst SliderColor = ({ value, text, handleChange, min = 0, max = 100 }) => {\n  const isError = () => value < min || value > max;\n\n  return (\n    <Grid>\n      <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\n        {text}\n      </Typography>\n      <Grid container justify='center' alignItems='center' wrap='nowrap'>\n        <Slider\n          style={{ padding: '12px 0px' }}\n          value={Math.round(value * 100) / 100}\n          aria-labelledby=\"label\"\n          onChange={handleChange(text)}\n          min={min}\n          max={max}\n        />\n        <TextField\n          value={Math.round(value * 100) / 100}\n          onChange={handleChange(text)}\n          margin=\"none\"\n          style={{ marginLeft: 20 }}\n          type=\"number\"\n          error={isError()}\n          helperText={isError() ? \"Invalid value\" : ' '}\n          \n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default SliderColor;","const types = {\n  HLS: 'HLS',\n  CMYK: 'CMYK',\n  RGB: 'RGB',\n}\n\nconst RGBtoHLS = (R, G, B) => {\n  const R_ = R / 255;\n  const G_ = G / 255;\n  const B_ = B / 255;\n  const Cmax = Math.max(R_, G_, B_);\n  const Cmin = Math.min(R_, G_, B_);\n  const delta = Cmax - Cmin;\n\n  const HMatrix = [\n    {\n      condition: () => delta === 0,\n      value: 0,\n    },\n    {\n      condition: () => Cmax === R_,\n      value: 60 * (((G_ - B_) / delta) % 6),\n    },\n    {\n      condition: () => Cmax === G_,\n      value: 60 * (((B_ - R_) / delta) + 2),\n    },\n    {\n      condition: () => Cmax === B_,\n      value: 60 * (((R_ - G_) / delta) + 4),\n    },\n  ];\n\n  const H = (HMatrix.find(e => e.condition()).value + 360) % 360 || 0;\n\n  const L = (Cmax + Cmin) / 2;\n\n  const SMatrix = [\n    {\n      condition: () => delta === 0,\n      value: 0,\n    },\n    {\n      condition: () => delta !== 0,\n      value: delta / (1 - Math.abs(2 * L - 1)),\n    },\n  ];\n\n  const S = SMatrix.find(e => e.condition()).value;\n\n  return { H, S, L };\n}\n\nconst RGBtoCMYK = (R, G, B) => {\n  const R_ = R / 255;\n  const G_ = G / 255;\n  const B_ = B / 255;\n\n  const K = 1 - Math.max(R_, G_, B_);\n  const C = (1 - R_ - K) / (1 - K) || 0;\n  const M = (1 - G_ - K) / (1 - K) || 0;\n  const Y = (1 - B_ - K) / (1 - K) || 0;\n\n  return { C, M, Y, K };\n}\n\nconst HLStoRGB = (H, L, S) => {\n  const C = (1 - Math.abs(2 * L - 1)) * S;\n  const X = C * (1 - Math.abs((H / 60) % 2 - 1));\n  const m = L - C / 2;\n  \n  const HLSMatrix = [\n    {\n      condition: () => (H >= 0 && H < 60) || !H,\n      value: [C, X, 0],\n    }, {\n      condition: () => H >= 60 && H < 120,\n      value: [X, C, 0],\n    }, {\n      condition: () => H >= 120 && H < 180,\n      value: [0, C, X],\n    }, {\n      condition: () => H >= 180 && H < 240,\n      value: [0, X, C],\n    }, {\n      condition: () => H >= 240 && H < 300,\n      value: [X, 0, C],\n    }, {\n      condition: () => H >= 300 && H <= 360,\n      value: [C, 0, X],\n    },\n  ];\n\n  const [R_, G_, B_] = HLSMatrix.find(e => e.condition()).value;\n\n  const R = (R_ + m) * 255;\n  const G = (G_ + m) * 255;\n  const B = (B_ + m) * 255;\n\n  return { R, G, B };\n}\n\nconst CMYKtoRGB = (C, M, Y, K) => {\n  const R = 255 * (1 - C) * (1 - K);\n  const G = 255 * (1 - M) * (1 - K);\n  const B = 255 * (1 - Y) * (1 - K);\n  return { R, G, B };\n}\n\nexport { types, RGBtoHLS, RGBtoCMYK, HLStoRGB, CMYKtoRGB };","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport SliderColor from '../SliderColor';\nimport { types } from '../utls';\n\nconst styles = {\n  card: {\n    width: 345,\n    margin: 20,\n  },\n  media: {\n    height: 140,\n  }\n};\n\nconst SMYK = ({ classes, C, M, Y, K, handleChange: _handleChange, R, G, B }) => {\n  const handleChange = _handleChange({ type: types.CMYK, data: { C, M, Y, K } });\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        style={{ background: `rgb(${R},${G},${B})` }}\n        title=\"CMYK\"\n        image={'none'}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          CMYK\n      </Typography>\n        <SliderColor handleChange={handleChange} min={0} max={1} value={C} text={'C'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={M} text={'M'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={Y} text={'Y'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={K} text={'K'} />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default withStyles(styles)(SMYK);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport SliderColor from '../SliderColor';\nimport { types } from '../utls';\n\nconst styles = {\n  card: {\n    width: 345,\n    margin: 20,\n  },\n  media: {\n    height: 140,\n  }\n};\n\nconst RGB = ({ classes, R, G, B, handleChange: _handleChange }) => {\n  const handleChange = _handleChange({ type: types.RGB, data: { R, G, B } });\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        style={{ background: `rgb(${R},${G},${B})` }}\n        image={'none'}\n        title=\"RGB\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          RGB\n      </Typography>\n        <SliderColor min={0} max={255} handleChange={handleChange} value={R} text={'R'} />\n        <SliderColor min={0} max={255} handleChange={handleChange} value={G} text={'G'} />\n        <SliderColor min={0} max={255} handleChange={handleChange} value={B} text={'B'} />\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default withStyles(styles)(RGB);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SliderColor from '../SliderColor';\nimport { types } from '../utls';\n\nconst styles = {\n  card: {\n    width: 345,\n    margin: 20,\n  },\n  media: {\n    height: 140,\n  }\n};\n\nconst HLS = ({ classes, H, L, S, handleChange: _handleChange, R, G, B }) => {\n  const handleChange = _handleChange({ type: types.HLS, data: { H, S, L } });\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        style={{ background: `rgb(${R},${G},${B})` }}\n        title=\"HLS\"\n        image={'none'}\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          HLS\n      </Typography>\n        <SliderColor handleChange={handleChange} min={0} max={360} value={H} text={'H'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={L} text={'L'} />\n        <SliderColor handleChange={handleChange} min={0} max={1} value={S} text={'S'} />\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Just set max mark ;)\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default withStyles(styles)(HLS);","import React, { Component } from 'react';\nimport SMYK from './components/SMYK';\nimport RGB from './components/RGB';\nimport HLS from './components/HLS';\nimport { Grid, Fab } from '@material-ui/core';\nimport { types, CMYKtoRGB, RGBtoCMYK, RGBtoHLS, HLStoRGB } from './components/utls';\nimport { BlockPicker } from 'react-color';\nimport { Colorize } from '@material-ui/icons';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      R: 0,\n      G: 150,\n      B: 250,\n      isPick: false,\n    }\n  };\n\n  handleChangeComplete = (color) => {\n    const { r, g, b } = color.rgb;\n    this.setState({ R: r, G: g, B: b });\n  };\n\n  commonReturn = {\n    handleChange: this.handleChange,\n  }\n\n  toHLS = () => {\n    const { R, G, B } = this.state;\n\n    return {\n      handleChange: this.handleChange,\n      ...RGBtoHLS(R, G, B),\n      ...this.state,\n    }\n  }\n\n  toSMYK = () => {\n    const { R, G, B } = this.state;\n\n    return {\n      handleChange: this.handleChange,\n      ...RGBtoCMYK(R, G, B),\n      ...this.state,\n    }\n  }\n\n  toRGB = () => {\n    return {\n      handleChange: this.handleChange,\n      ...this.state,\n    }\n  }\n\n  handleChange = ({ type, data }) => sliderType => (e, value) => {\n    let R;\n    let G;\n    let B;\n    switch (type) {\n      case types.RGB: {\n        const { R: _R, G: _G, B: _B } = data;\n        const addNewValue = { R: _R, G: _G, B: _B, [sliderType]: value || e.target.value };\n\n        R = addNewValue.R || 0;\n        G = addNewValue.G || 0;\n        B = addNewValue.B || 0;\n\n        break;\n      }\n      case types.CMYK: {\n        const { C: _C, M: _M, Y: _Y, K: _K } = data;\n        const addNewValue = { C: _C, M: _M, Y: _Y, K: _K, [sliderType]: value || e.target.value };\n        const { R: _R, G: _G, B: _B } = CMYKtoRGB(addNewValue.C, addNewValue.M, addNewValue.Y, addNewValue.K);\n\n        R = _R || 0;\n        G = _G || 0;\n        B = _B || 0;\n\n        break;\n      }\n      case types.HLS: {\n        const { H: _H, L: _L, S: _S } = data;\n        const addNewValue = { H: _H, L: _L, S: _S, [sliderType]: value || e.target.value };\n        const { R: _R, G: _G, B: _B } = HLStoRGB(addNewValue.H, addNewValue.L, addNewValue.S);\n\n        R = _R || 0;\n        G = _G || 0;\n        B = _B || 0;\n\n        break;\n      }\n      default:\n        throw new Error('No such type');\n    }\n\n    this.setState({ R, G, B });\n  }\n\n  appearPicker = (isPick = !this.state.isPick) => () => {\n    this.setState({ isPick });\n  }\n\n  render() {\n    const { R, G, B, isPick } = this.state;\n\n    (!R || !G || !B) && console.log(this.state);\n\n    return (\n      <Grid container style={{ height: '100vh' }} justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"center\">\n                <Fab onClick={this.appearPicker()} style={{ marginTop: 20, background: `rgb(${R},${G},${B})` }}>\n                  <Colorize />\n                </Fab>\n                {isPick &&\n                  <ClickAwayListener onClickAway={this.appearPicker(false)}>\n\n                    <div style={{ position: 'absolute', marginTop: 100 }}>\n                      <BlockPicker\n                        color={{ r: R, g: G, b: B }}\n                        onChangeComplete={this.handleChangeComplete}\n                      /> </div>\n                  </ClickAwayListener>}\n              </Grid>\n            </Grid>\n            <SMYK {...this.toSMYK()} />\n            <RGB {...this.toRGB()} />\n            <HLS {...this.toHLS()} />\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}